syntax = "proto3";
import "google/protobuf/empty.proto";
import "common.proto";
import "railway-service.proto";
import "train/train-type.proto";
import "train/service-class.proto";
import "train/update.proto";
option java_multiple_files = true;

option java_package = "it.trenical.proto.train";
package train;

service TrainManager {
  rpc RegisterTrainType(RegisterTrainTypeRequest) returns (google.protobuf.Empty);
  rpc GetAllTrainTypes(google.protobuf.Empty) returns (stream train.TrainTypeResponse);
  rpc GetTrainTypeByName(TrainTypeByNameRequest) returns (train.TrainTypeResponse);
  rpc RemoveTrainTypeByName(TrainTypeByNameRequest) returns (google.protobuf.Empty);

  rpc RegisterServiceClass(train.ServiceClass) returns (google.protobuf.Empty);
  rpc GetAllServiceClasses(google.protobuf.Empty) returns (stream train.ServiceClass);
  rpc GetServiceClassByName(ServiceClassByNameRequest) returns (train.ServiceClass);
  rpc RemoveServiceClassByName(ServiceClassByNameRequest) returns (google.protobuf.Empty);

  rpc RegisterTrain(RegisterTrainRequest) returns (TrainResponse);
  rpc GetAllTrains(TrainQueryParameters) returns (stream TrainResponse);
  rpc GetTrainById(TrainId) returns (TrainResponse);
  rpc RemoveTrainById(TrainId) returns (google.protobuf.Empty);

  rpc ListenToTrainUpdates(ListenToTrainRequest) returns (stream train.TrainUpdate);
  rpc SetTrainDelay(SetTrainDelayRequest) returns (Empty);
  rpc ChangeTrainStationStop(ChangeTrainStationStopRequest) returns (Empty);
  rpc CancelTrain(TrainId) returns (Empty);
}

message RegisterTrainTypeRequest {
  string name = 1;
  double speed = 3;
  double costPerKm = 4;
}

message TrainTypeByNameRequest {
  string name = 1;
}

message ServiceClassByNameRequest {
  string name = 1;
}

message RegisterTrainRequest {
  string name = 1;
  string typeName = 2;
  int64 departureTime = 3;
  map<string, int32> classSeats = 4;
  map<string, int32> platformChoices = 5;
  int32 pathId = 6;
}

message TrainId {
  int32 id = 1;
}

message ClassSeats {
  train.ServiceClass serviceClass = 1;
  int32 count = 2;
}

message TrainResponse {
  int32 id = 1;
  string name = 2;
  train.TrainTypeResponse type = 3;
  int64 departureTime = 4;
  railway.PathResponse path = 5;
  repeated ClassSeats seats = 6;
  map<string, int32> platformChoices = 7;
}

message StationPair {
  string departure = 1;
  string arrival = 2;
}

message TrainQueryParameters {
  oneof pathFilter {
    int32 pathId = 1;
    StationPair stations = 10;
  }
  optional string type = 2;
  optional string serviceClass = 3;
  optional DateRange dateRange= 4;
}

message ListenToTrainRequest {
  optional int32 trainId = 1;
}

message SetTrainDelayRequest {
  int32 trainId = 1;
  int32 minutes = 2;
}

message ChangeTrainStationStopRequest {
  int32 trainId = 1;
  string stationName = 2;
  int32 trackNumber = 3;
}

